knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggfortify)
library(stats)
library(TSA)
library(forecast)
library(tsoutliers)
library(astsa)
library(tseries)
library(dynlm)
library(stats)
library(randtests) #turning.point.test
library(reshape2)
library(gridExtra)
options(scipen=10000) #No scientific notation
decomp <- decompose(hawaii.ts, type=c("additive")) # use type = "additive" for additive components by MA
hawaii <- read.csv("../data/Carbon_Hawaii.csv")
dim(hawaii)
hawaii.ts <- ts(hawaii$Carbondioxide, frequency=12, start=c(1959, 1), end=c(1990, 12))
plot(hawai
)
plot(hawaii.ts)
decomp <- decompose(hawaii.ts, type=c("additive")) # use type = "additive" for additive components by MA
plot(decomp)
lowesdecomp <- stl(hawaii.ts, s.window = "periodic") #seasonal decomposition by lowess
lowesdecomp
plot(seasadj(lowesdecomp))
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(ggfortify)
library(stats)
library(TSA)
library(forecast)
library(tsoutliers)
library(astsa)
library(tseries)
library(dynlm)
library(stats)
library(randtests) #turning.point.test
library(reshape2)
library(gridExtra)
options(scipen=10000) #No scientific notation
hawaii <- read.csv("../data/Carbon_Hawaii.csv")
dim(hawaii)
hawaii.ts <- ts(hawaii$Carbondioxide, frequency=12, start=c(1959, 1), end=c(1990, 12))
anyNA(hawaii.ts)
plot(hawaii)
plot(hawaii.ts)
head(hawaii)
# Time series plot
autoplot(hawaii.ts, main = "Hawaii CO2", xlab = "Time", ylab = "Number")
plot.ts(hawaii.ts, main = "Hawaii CO2", xlab = "Time", ylab = "Number")
abline(reg=lm(hawaii.ts~time(hawaii.ts)), col = "red")
# Identifying outliers
Out <- boxplot(hawaii.ts)$out
length(which(hawaii.ts %in% Out))
den <- density(hawaii.ts, adjust = 1)
plot(den, main = "density plot for Hawaii CO2")
polygon(den, col = "red", border = "blue")
outs <- tso(hawaii.ts, types = c("TC", "AO", "LS", "IO", "SLS"))
tsoutliers(hawaii.ts)
plot(outs)
# Another inspection
time(hawaii.ts)
cycle(hawaii.ts)
summary(hawaii.ts)
str(hawaii.ts)
dim(hawaii.ts)
sd(hawaii.ts)
#Initial check
adf.test(hawaii.ts)
#kpss.test(hawaii.ts)
#Trend OR Seasonality
decomp <- decompose(hawaii.ts, type=c("additive")) # use type = "additive" for additive components by MA
plot(decomp)
decomp2 <- decompose(hawaii.ts, type=c("multiplicative")) # use type = "additive" for additive components by MA
plot(decomp2)
lowesdecomp <- stl(hawaii.ts, s.window = "periodic") #seasonal decomposition by lowess
lowesdecomp
plot(seasadj(lowesdecomp))
plot(seasadj(decomp2))
plot(seasadj(decomp))
seasonplot(seasadj(lowesdecomp), col = rainbow(10), main = "seasonal plot")
seasonplot(hawaii.ts, col = rainbow(10), main = "seasonal plot for original data")
ndiffs(hawaii.ts) #check how many differencing is needed
ndiffs(seasadj(decomp2))
ndiffs(seasadj(lowesdecomp))
plot(diff(hawaii.ts, 12, 1), type = "o")
mean(diff(hawaii.ts, 12, 1))
adf.test(diff(hawaii.ts, 12, 1))
adf <- 0 #Initializing vector for adf data
for(i in 1:11){
adf[i] <- adf.test(diff(diff(hawaii.ts, 12, i)))$statistic
}
which.min(adf) #check which model is the most significant/most stationary
plot(diff(diff(hawaii.ts, 12, 1)), type = "o")
mean(diff(diff(hawaii.ts, 12, 1)))
#It is a new dataset after 1st and seasonal differencings
newdata <- diff(diff(hawaii.ts, 12, 1))
#Moving average smoothings/filtering
mv <- stats::filter(newdata, sides = 2, filter = c(0.5, rep(1, 11), 0.5)/12)
plot(newdata, main = "Detrending")
lines(mv, col = 2)
#Kernel smooth
plot(newdata)
lines(ksmooth(time(newdata), newdata, kernel = "normal", bandwidth = 1), col = 3)
#Lowess
plot(newdata)
lines(lowess(newdata), col = 4)
#smooth splines
lines(smooth.spline(time(newdata), newdata, spar = 0.5), col = 5)
#Scatterplot matrix and acf and pacf for sanity check
lag1.plot(hawaii.ts, max.lag = 12)
acf(hawaii.ts)
pacf(hawaii.ts)
lag1.plot(newdata, max.lag = 12)
#Split the train and testing
test <- tail(hawaii.ts, 12)
train <- head(hawaii.ts, -12)
length(test)
length(train)
length(hawaii.ts)
newtrain <- diff(diff(train, 12, 1))
#ACF, PACF, EACF
acf2(newtrain, main = "ACF and PACF for transformed Hawaii CO2")
eacf(newtrain)
#Sarima - model comparison (out = not appropriate, good = appropriate)
sarima(train, 2, 1, 2, 0, 1, 1, 12) #out
sarima(train, 2, 1, 1, 0, 1, 1, 12) #good
sarima(train, 1, 1, 2, 0, 1, 1, 12) #out
sarima(train, 0, 1, 2, 0, 1, 1, 12) #out
sarima(train, 1, 1, 1, 0, 1, 1, 12) #good
sarima(train, 0, 1, 1, 0, 1, 1, 12) #good
sarima(train, 1, 1, 0, 0, 1, 1, 12) #out
sarima(train, 0, 1, 0, 0, 1, 1, 12) #out
sarima(train, 2, 1, 2, 1, 1, 1, 12) #out
sarima(train, 2, 1, 1, 1, 1, 1, 12) #out
sarima(train, 1, 1, 2, 1, 1, 1, 12) #out
sarima(train, 0, 1, 2, 1, 1, 1, 12) #out
sarima(train, 1, 1, 1, 1, 1, 1, 12) #out
sarima(train, 0, 1, 1, 1, 1, 1, 12) #out
sarima(train, 1, 1, 0, 1, 1, 1, 12) #out
sarima(train, 0, 1, 0, 1, 1, 1, 12) #out
#turning.point.test(train)
#shapiro.test()
#qqnorm()
#Model parameter estimation
model1 <- sarima(train, 2, 1, 1, 0, 1, 1, 12)
model2 <- sarima(train, 1, 1, 1, 0, 1, 1, 12)
model3 <- sarima(train, 0, 1, 1, 0, 1, 1, 12)
model1$ttable[,1]
model2$ttable[,1]
model3$ttable[,1]
#Forecasting
model1_for <- sarima.for(train, 12, 2, 1, 1, 0, 1, 1, 12)
lines(test, type = "o", col = "blue") #real
title(main = "model 1 forecasting (red = predict, blue = real)")
model2_for <- sarima.for(train, 12, 1, 1, 1, 0, 1, 1, 12)
lines(test, type = "o", col = "blue") #real
title("model 2 forecasting (red = predict, blue = real)")
model3_for <- sarima.for(train, 12, 0, 1, 1, 0, 1, 1, 12)
lines(test, type = "o", col = "blue") #real
title("model 3 forecasting (red = predict, blue = real)")
model_for <- sarima.for(hawaii.ts, 24, 0, 1, 1, 0, 1, 1, 12)
lines(test, type = "o", col = "blue")
title("Future 2-year forecasting")
#Prediction and Standard Error table
predict_data <- data.frame(model1_prediction = model1_for$pred,
model1_sd = model1_for$se,
model2_prediction = model2_for$pred,
model2_sd = model2_for$se,
model3_prediction = model3_for$pred,
model3_sd = model1_for$se)
predict_data <- round(predict_data, 3)
predict_data
#MSE and Mean MSE table
mse_data <- matrix(0, 12, 3)
for(j in 1:3){
for(i in 1:12){
mse_data[i, j] <- (test[i] - predict_data[i, 2*j - 1])^2
}
}
mse_data <- rbind(mse_data, colMeans(mse_data))
colnames(mse_data) <- c("Model1", "Model2", "Model3")
name <- 0
for(i in 1:nrow(mse_data) - 1){
name[i] <- paste0("MSE: 1990, ", i)
}
name <- c(name, "Mean MSE")
rownames(mse_data) <- name
mse_data
knitr::opts_chunk$set(echo = TRUE)
library(TSA)
?LagReg
daydta("clim")
data("clim")
data("climhyd")
climhyd
ts(climhyd)
climhyd
climhyd$Inflow <-  log(climhyd$Inflow)
climhyd$Precip <- sqrt(climhyd$Precip)
mvspec(as.ts(climhyd))
mvspec(as.ts(climhyd),spans = c(7, 7), taper = 0.5, plot.type = "coh", ci = -1)
